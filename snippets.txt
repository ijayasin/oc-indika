Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root to: "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. You can copy Devise views (for customization) to your app by running:

       rails g devise:views


----------------------------------------------------------------------------------------------


Mapbox files
/Users/indika/.rvm/gems/ruby-2.3.3@rails5/gems/mapbox-rails-1.6.1.1/lib/mapbox-rails/remote_resource_loader.rb


curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.uncompressed.js"      -o "javascripts/mapbox.js"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/mapbox.css"                  -o "stylesheets/mapbox.css"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/layers.png"           -o "images/layers.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/marker-icon.png"      -o "images/marker-icon.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/marker-shadow.png"    -o "images/marker-shadow.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/icons-000000.png"     -o "images/icons-000000.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/icons-ffffff.png"     -o "images/icons-ffffff.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/icons-000000@2x.png"  -o "images/icons-000000@2x.png"
curl "http://api.tiles.mapbox.com/mapbox.js/v1.6.1/images/icons-ffffff@2x.png"  -o "images/icons-ffffff@2x.png"


----------------------------------------------------------------------------------------------

USEFUL LINKS:
Hover on popup:          https://www.mapbox.com/mapbox-gl-js/example/popup-on-hover/
Create map using bounds: https://www.mapbox.com/mapbox-gl-js/example/fitbounds/
Onclick example:         https://www.mapbox.com/mapbox-gl-js/example/polygon-popup-on-click/
Custom Markers:          https://www.mapbox.com/mapbox-gl-js/example/custom-marker-icons/
Popup                    https://www.mapbox.com/mapbox-gl-js/example/set-popup/
Dragable Point           https://www.mapbox.com/mapbox-gl-js/example/drag-a-point/
Center Map on Clicked Symbol https://www.mapbox.com/mapbox-gl-js/example/center-on-symbol/


LAT1 = SW
LAT2 = NE

https://www.mapbox.com/help/mapbox-gl-js-fundamentals/
https://www.mapbox.com/mapbox-gl-js/examples/
https://www.mapbox.com/mapbox-gl-js/api/#Events
https://www.mapbox.com/mapbox-gl-js/api/#MapBoxZoomEvent

Image API
https://www.mapbox.com/api-documentation/#static-classic

# a 400x200 static map
https://api.mapbox.com/v4/mapbox.dark/-76.9,38.9,5/400x200.png?access_token=your-access-token



https://www.mapbox.com/mapbox-gl-js/example/fitbounds/


document.getElementById('fit').addEventListener('click', function() {
    map.fitBounds([[
        32.958984,
        -5.353521
    ], [
        43.50585,
        5.615985
    ]]);
});




// POPUP
// https://www.mapbox.com/mapbox-gl-js/example/popup/
var popup = new mapboxgl.Popup({closeOnClick: false})
    .setLngLat([-96, 37.8])
    .setHTML('<h1>Hello World!</h1>')
    .addTo(map);


// Popup on Click
// https://www.mapbox.com/mapbox-gl-js/example/popup-on-click/
//
// When a click event occurs near a place, open a popup at the location of
// the feature, with description HTML from its properties.
map.on('click', function (e) {
    var features = map.queryRenderedFeatures(e.point, { layers: ['places'] });

    if (!features.length) { return; }

    var feature = features[0];

    // Populate the popup and set its coordinates
    // based on the feature found.
    var popup = new mapboxgl.Popup()
        .setLngLat(feature.geometry.coordinates)
        .setHTML(feature.properties.description)
        .addTo(map);
});


